plugins {
    id 'java-gradle-plugin'
    id 'groovy'
    id 'maven'
    id 'maven-publish'
    id 'com.gradle.plugin-publish' version '0.11.0'
    //id 'pandora-plugin' version '1.0.1' apply false
}

apply from: '../gradle/constants.gradle'

dependencies {
    implementation gradleApi()
    implementation localGroovy()
    implementation "com.github.whataa:pandora-plugin:$PANDORA_PLUGIN_VERSION"
    testImplementation "junit:junit:$JUNIT_VERSION"
}


//PLUGIN DEFINITION
group PROJECT_ARTIFACT_GROUP
version PROJECT_VERSION

gradlePlugin {
    plugins {
        inappdevtools {
            id = PROJECT_ARTIFACT_GROUP
            displayName = PLUGIN_DISPLAY_NAME
            description = PLUGIN_DESCRIPTION
            implementationClass = 'org.inappdevtools.plugin.InAppDevToolsPlugin'
        }
    }
}

pluginBundle {
    website = PROJECT_URL
    vcsUrl =  PROJECT_URL + '.git'
    description = PLUGIN_DESCRIPTION
    tags = PROJECT_TAGS
}

jar {
    manifest {
        attributes(
                'Manifest-Version': 1.1,
                'Created-By': AUTHOR_NAME,
                'Bundle-License' : PROJECT_LICENSE_URL,

                'Name': PLUGIN_NAME,
                'Specification-Title' : PLUGIN_DISPLAY_NAME,
                'Specification-Version' : PROJECT_VERSION,
                'Specification-Vendor' : AUTHOR_NAME,
                'Implementation-Title' : PROJECT_NAME,
                'Implementation-Version' : PROJECT_VERSION,
                'Implementation-Vendor' : ORG_NAME,
                'Implementation-URL' : PROJECT_URL,
        )
    }
}

repositories {
    mavenCentral()
    jcenter()
}

uploadArchives {
    repositories {
        mavenDeployer {
            repository(url: uri('repo'))
        }
    }
}


// MAIN PUBLICATION TASKS
// publishPlugins: Production publication into Gradle Plugin Portal
// publishToMavenLocal: Development publication into mavenLocal
// uploadArchives: Development publication into local 'repo'


//JAR MANIFEST SAMPLES:
/*//Sample 1
Created-By: 1.7.0_06 (Oracle Corporation)
Name: java/util/
Specification-Title: Java Utility Classes
Specification-Version: 1.2
Specification-Vendor: Example Tech, Inc.
Implementation-Title: java.util
Implementation-Version: build57
Implementation-Vendor: Example Tech, Inc.

//Sample 2
Manifest-Version: 1.0
Ant-Version: Apache Ant 1.8.4
Created-By: 1.7.0_40-b43 (Oracle Corporation)
X-Compile-Source-JDK: 1.7
X-Compile-Target-JDK: 1.7

//Sample 3
Name: javax/servlet/
Specification-Title: Java API for Servlets
Specification-Version: 3.1
Specification-Vendor: Sun Microsystems, Inc.
Implementation-Title: javax.servlet
Implementation-Version: 3.1.FR
Implementation-Vendor: Apache Software Foundation

//Complex samples
Manifest-Version: 1.0
Created-By: 1.3.1 (IBM Corporation)
Main-Class: org.apache.xalan.xslt.Process
Class-Path: xercesImpl.jar xml-apis.jar serializer.jar

Name: org/apache/xalan/
Comment: Main Xalan engine implementing TrAX/JAXP
Specification-Title: Java API for XML Processing
Specification-Vendor: Sun Microsystems Inc.
Specification-Version: 1.3
Implementation-Title: org.apache.xalan
Implementation-Version: 2.7.0
Implementation-Vendor: Apache Software Foundation
Implementation-URL: http://xml.apache.org/xalan-j/

Name: org/apache/xpath/
Comment: XPath engine
Implementation-Title: org.apache.xpath
Implementation-Version: 2.7.0
Implementation-Vendor: Apache Software Foundation
Implementation-URL: http://xml.apache.org/xalan-j/

Name: org/apache/xml/
Comment: DTM implementation and utilities
Implementation-Title: org.apache.xml
Implementation-Version: 2.7.0
Implementation-Vendor: Apache Software Foundation
Implementation-URL: http://xml.apache.org/xalan-j/*/