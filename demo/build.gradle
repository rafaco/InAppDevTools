apply plugin: 'com.android.application'
apply from: '../compat/preprocess.gradle'
apply from: '../gradle/constants.gradle'

/*
 *  Iadt PLUGIN: import directly from modules. For development.
 */
//apply from: '../plugin/build.gradle'

/*
 *  Iadt PLUGIN: import from repository (jCenter or localMaven). Standard usage
 */
apply plugin: 'es.rafaco.inappdevtools'


android {
    compileSdkVersion PROJECT_COMPILE_SDK
    buildToolsVersion PROJECT_BUILD_TOOLS
    defaultConfig {
        applicationId "es.rafaco.inappdevtools.demo"
        minSdkVersion PROJECT_MIN_SDK
        targetSdkVersion PROJECT_TARGET_SDK
        versionCode DEMO_VERSION_CODE
        versionName DEMO_VERSION

        //TODO: remove
        multiDexEnabled false
    }

    compileOptions {
        targetCompatibility PROJECT_TARGET_COMPATIBILITY
        sourceCompatibility PROJECT_SOURCE_COMPATIBILITY
    }

    flavorDimensions "compatibility"
    productFlavors {
        support {
            dimension "compatibility"
            processor.symbols "SUPPORT"
            matchingFallbacks = ['debug', 'release']
            testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
        }
        androidx {
            dimension "compatibility"
            processor.symbols "ANDROIDX"
            matchingFallbacks = ['debug', 'release']
            testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        }
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
}

dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')

    /*
     *  Iadt COMPAT: import directly from modules.
     */
    api project(path: ':compat')

    /*
     *  Iadt COMPAT: import from repository (jCenter or localMaven). Standard usage
     */
    //androidxImplementation "es.rafaco.compat:androidx:$PROJECT_VERSION"
    //supportImplementation "es.rafaco.compat:support:$PROJECT_VERSION"

    // AndroidX/Support view components added by compat module:
    //    androidxApi "androidx.appcompat:appcompat:$rootProject.ext.ANDROIDX_MAIN_VERSION"
    //    supportApi "com.android.support:appcompat-v7:$rootProject.ext.appSupportVersion"
    //    androidxApi "com.google.android.material:material:$rootProject.ext.ANDROIDX_MATERIAL_VERSION"
    //    supportApi "com.android.support:design:$rootProject.ext.appSupportVersion"
    //    supportApi "com.android.support:support-v4:$rootProject.ext.appSupportVersion"
    //    androidxApi "androidx.recyclerview:recyclerview:$rootProject.ext.ANDROIDX_MAIN_VERSION"
    //    supportApi "com.android.support:recyclerview-v7:$rootProject.ext.appSupportVersion"


    /*
     *  Iadt LIBRARY: import directly from modules. For development.
     */
    debugApi project(path: ':library')
    releaseApi project(path: ':noop')

    /*
     *  Iadt LIBRARY: import from repository (jCenter or localMaven). Standard usage
     */
    //supportImplementation "es.rafaco.inappdevtools:support:$PROJECT_VERSION"
    //androidxImplementation "es.rafaco.inappdevtools:androidx:$PROJECT_VERSION"
    //releaseImplementation "es.rafaco.inappdevtools:noop:$PROJECT_VERSION"


    //Retrofit
    api "com.squareup.retrofit2:retrofit:$RETROFIT_VERSION"
    api "com.squareup.retrofit2:converter-gson:$RETROFIT_VERSION"

    //Test
    testImplementation "junit:junit:$JUNIT_VERSION"
    androidTestAndroidxImplementation "androidx.test:runner:$ANDROIDX_TEST_RUNNER"
    androidTestAndroidxImplementation "androidx.test.espresso:espresso-core:$ANDROIDX_TEST_ESPRESSO"
    androidTestSupportImplementation "com.android.support.test:runner:$SUPPORT_TEST_RUNNER"
    androidTestSupportImplementation "com.android.support.test.espresso:espresso-core:$SUPPORT_TEST_ESPRESSO"
}

/*
 *  Iadt CONFIGURATION
 */
inappdevtools {
    //// Build flags (affect plugin behaviour)
    enabled = true
    debug = true
    //sourceInclusion = false
    //sourceInspection = false
    //enabledOnRelease = true

    //// Customization flags (runtime)
    notes = "This is a SAMPLE NOTE about this compilation:\n" +
            " - Developers can add any text here using Gradle configuration\n" +
            " - Useful to describe changes or to provide instructions"

    teamName = "DemoTeam"
    teamDesc = "Team description or any text you want to show on top of Team screen. Change it with 'teamDesc' configuration."
    teamEmail = 'inappdevtools@gmail.com'
    teamLinks = [ website   : "http://inappdevtools.org",
                  repo      : "https://github.com/rafaco/InAppDevTools",
                  issues    : "https://github.com/rafaco/InAppDevTools/issues",
                  readme    : "https://github.com/rafaco/InAppDevTools/blob/master/README.md" ]

    // Feature switches (runtime)
    //overlayEnabled = false
    //invocationByShake = false
    //invocationByIcon = true
    //callDefaultCrashHandler = true
    //injectEventsOnLogcat = true
}



sonarqube {
    androidVariant 'supportDebug'
}

task startApp(type: Exec) {
    def NAMESPACE_AND_ACTIVITY = 'es.rafaco.inappdevtools.demo/.view.MainActivity'

    if (System.properties['os.name'].toLowerCase().contains('windows')) {
        commandLine 'cmd', '/c', 'adb', 'shell', 'am', 'start', '-n', NAMESPACE_AND_ACTIVITY
    } else {
        commandLine 'adb', 'shell', 'am', 'start', '-n', NAMESPACE_AND_ACTIVITY
    }
}
