apply plugin: 'com.android.library'
apply from: '../gradle/constants.gradle'
apply from: 'publish.gradle'
apply from: '../compat/preprocess.gradle'

android {
    compileSdkVersion PROJECT_COMPILE_SDK
    buildToolsVersion PROJECT_BUILD_TOOLS

    defaultConfig {
        minSdkVersion PROJECT_MIN_SDK
        targetSdkVersion PROJECT_TARGET_SDK
        versionCode PROJECT_VERSION_CODE
        versionName PROJECT_VERSION

        javaCompileOptions {
            annotationProcessorOptions {
                arguments = ["room.schemaLocation": "$projectDir/schemas".toString()]
            }
        }
    }

    compileOptions {
        targetCompatibility PROJECT_TARGET_COMPATIBILITY
        sourceCompatibility PROJECT_SOURCE_COMPATIBILITY
    }

    flavorDimensions "compatibility"
    productFlavors {
        support {
            dimension "compatibility"
            processor.symbols "SUPPORT"
            matchingFallbacks = ['debug', 'release']
            testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
        }
        androidx {
            dimension "compatibility"
            processor.symbols "ANDROIDX"
            matchingFallbacks = ['debug', 'release']
            testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        }
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
}

// Dynamic dependencies for Compat module (AndroidX/Support)
/*android.libraryVariants.all { variant ->
    println ( "RAFA: " + variant.buildType.name)
    if (variant.buildType.name == "debug") {
        dependencies{
            debugApi project(path: ':compat')
        }
    }
    else {
        if (variant.flavorName == 'androidx') {
            dependencies.androidxApi "es.rafaco.compat:androidx:$PROJECT_VERSION"
        } else {
            dependencies.supportApi "es.rafaco.compat:support:$PROJECT_VERSION"
        }
    }
}
//androidxImplementation "es.rafaco.compat:androidx:$PROJECT_VERSION"
//supportImplementation "es.rafaco.compat:support:$PROJECT_VERSION"
*/

dependencies {

    api project(path: ':compat')
    // AndroidX/Support view components, inherited from compat module:
    //    androidxApi "androidx.appcompat:appcompat:$ANDROIDX_MAIN_VERSION"
    //    supportApi "com.android.support:appcompat-v7:$appSupportVersion"
    //    androidxApi "com.google.android.material:material:$ANDROIDX_MATERIAL_VERSION"
    //    supportApi "com.android.support:design:$appSupportVersion"
    //    supportApi "com.android.support:support-v4:$appSupportVersion"
    //    androidxApi "androidx.recyclerview:recyclerview:$ANDROIDX_MAIN_VERSION"
    //    supportApi "com.android.support:recyclerview-v7:$appSupportVersion"

    // AndroidX logic components
    androidxApi "androidx.annotation:annotation:$ANDROIDX_MAIN_VERSION"
    androidxApi "androidx.room:room-runtime:$ANDROIDX_OTHER_VERSION"
    androidxAnnotationProcessor "androidx.room:room-compiler:$ANDROIDX_OTHER_VERSION"
    androidxApi "androidx.lifecycle:lifecycle-runtime:$ANDROIDX_OTHER_VERSION"
    androidxApi "androidx.lifecycle:lifecycle-extensions:$ANDROIDX_OTHER_VERSION"
    androidxAnnotationProcessor "androidx.lifecycle:lifecycle-compiler:$ANDROIDX_OTHER_VERSION"
    androidxApi "androidx.paging:paging-runtime:$ANDROIDX_OTHER_VERSION"

    // Support logic components
    supportApi "com.android.support:support-annotations:$SUPPORT_MAIN_VERSION"
    supportApi "android.arch.persistence.room:runtime:$SUPPORT_ARCH_VERSION"
    supportAnnotationProcessor "android.arch.persistence.room:compiler:$SUPPORT_ARCH_VERSION"
    supportApi "android.arch.lifecycle:extensions:$SUPPORT_ARCH_VERSION"
    supportApi "android.arch.lifecycle:runtime:$SUPPORT_ARCH_VERSION"
    supportAnnotationProcessor "android.arch.lifecycle:compiler:$SUPPORT_ARCH_VERSION"
    supportApi "android.arch.paging:runtime:$SUPPORT_PAGING_VERSION"

    // Pandora
    androidxApi ("com.github.whataa:pandora:androidx_v$PANDORA_VERSION") {
        exclude group: 'com.squareup.okhttp3'
    }
    supportApi ("com.github.whataa:pandora:v$PANDORA_VERSION") {
        exclude group: 'com.squareup.okhttp3'
    }
    api("com.squareup.okhttp3:okhttp:$OKHTTP_VERSION")

    // Retrofit
    api "com.squareup.retrofit2:retrofit:$RETROFIT_VERSION"
    api "com.squareup.retrofit2:converter-gson:$RETROFIT_VERSION"

    // Others
    api 'com.jraska:falcon:2.1.1'
    api 'com.github.alorma:timelineview:2.3.0'
    api 'com.github.anrwatchdog:anrwatchdog:1.3.0'
    api "com.github.nisrulz:easydeviceinfo-base:2.4.1"
    //api 'com.opencsv:opencsv:4.2' // Using org.apache.commons

    //supportApi 'com.github.MikeOrtiz:TouchImageView:1.4.1' // Support
    //androidxApi 'com.github.MikeOrtiz:TouchImageView:3.0.1' // Android

    //Test
    testImplementation "junit:junit:$JUNIT_VERSION"
    androidTestAndroidxImplementation "androidx.test:runner:$ANDROIDX_TEST_RUNNER"
    androidTestAndroidxImplementation "androidx.test.espresso:espresso-core:$ANDROIDX_TEST_ESPRESSO"
    androidTestSupportImplementation "com.android.support.test:runner:$SUPPORT_TEST_RUNNER"
    androidTestSupportImplementation "com.android.support.test.espresso:espresso-core:$SUPPORT_TEST_ESPRESSO"
    testSupportImplementation "android.arch.persistence.room:testing:$SUPPORT_ARCH_VERSION"
    testSupportImplementation "android.arch.core:core-testing:$SUPPORT_ARCH_VERSION"
    testSupportImplementation "android.arch.paging:common:$SUPPORT_PAGING_VERSION"
}

/*
apply plugin: 'es.rafaco.inappdevtools'

inappdevtools {
    //// User features fags
    //teamEmail = 'inappdevtools@gmail.com'

    //// Build flags (affect plugin)
    //enabled = true
    //enabledOnRelease = true
    debug = true
    //sourceInclusion = false
    //sourceInspection = false

    //// Runtime flags (used later on)
    //overlayEnabled = false
    //invocationByShake = false
    //invocationByIcon = true
    //callDefaultCrashHandler = true
}*/


sonarqube {
    androidVariant 'supportDebug'
}